{"version":3,"sources":["webpack:///./components/List/ListGroup.tsx","webpack:///./components/Icon/index.tsx","webpack:///./components/Checkbox/CheckboxItem.tsx","webpack:///./site/pages/Form/Checkbox/index.tsx","webpack:///./components/Checkbox/Checkbox.tsx"],"names":["memo","props","_a","prefixCls","className","style","title","children","_b","formMode","createElement","onClick","icon","spin","internal","Icon","footer","arrow","disabled","prop","head","converValue","valueKey","label","trigger","defaultValue","normalize","serialization","disabledValidate","onValidate","rest","content","FormContext","htmlFor","id","ListItem","FormItemField","Checkbox","history","Form","opr","Button","type","goBack","tips","ListGroup","value","forwardRef","ref","defaultChecked","_c","stand","_d","checked","setChecked","isControll","classString","changeChecked","check","onChange","toggle","e","target","cloneElement"],"mappings":"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","file":"js/21.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./style/index.scss\";\nimport List from \"./List\";\n/**\n * 列表组\n */\nfunction ListGroup(props) {\n    var _a = props.prefixCls, prefixCls = _a === void 0 ? \"weui-cells\" : _a, className = props.className, style = props.style, title = props.title, children = props.children, _b = props.formMode, formMode = _b === void 0 ? true : _b;\n    return (React.createElement(\"div\", { className: classNames(prefixCls + \"__group\", className, formMode ? \"weui-cells__group_form\" : \"\"), style: style },\n        React.createElement(List, { className: formMode ? \"weui-cells_form\" : \"\", title: title }, children)));\n}\nexport default React.memo(ListGroup);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./style/index.scss\";\n/**\n * 图标\n * @description 配合 @svgr/webpack 使用\n * @param props\n */\nfunction Icon(props) {\n    var _a = props.prefixCls, prefixCls = _a === void 0 ? \"weui-icon\" : _a, className = props.className, style = props.style, onClick = props.onClick, icon = props.icon, _b = props.spin, spin = _b === void 0 ? false : _b, children = props.children;\n    var internal = typeof icon === \"string\";\n    var Icon = icon;\n    return (React.createElement(\"i\", { className: classNames(prefixCls, className, internal ? prefixCls + \"-\" + icon : null, { spin: spin }), style: style, onClick: onClick },\n        !internal && React.createElement(Icon, null),\n        children));\n}\nexport default React.memo(Icon);\n","import { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport React, { useContext } from \"react\";\nimport { FormContext, FormItemField } from \"xy-form\";\nimport { ListItem } from \"../List\";\nimport Checkbox from \"./Checkbox\";\nimport \"./style/index.scss\";\nfunction CheckboxItem(props) {\n    var footer = props.footer, arrow = props.arrow, className = props.className, disabled = props.disabled, children = props.children, head = props.head, prop = props.prop, valueKey = props.valueKey, converValue = props.converValue, label = props.label, trigger = props.trigger, defaultValue = props.defaultValue, normalize = props.normalize, serialization = props.serialization, disabledValidate = props.disabledValidate, onValidate = props.onValidate, rest = __rest(props, [\"footer\", \"arrow\", \"className\", \"disabled\", \"children\", \"head\", \"prop\", \"valueKey\", \"converValue\", \"label\", \"trigger\", \"defaultValue\", \"normalize\", \"serialization\", \"disabledValidate\", \"onValidate\"]);\n    var content = useContext(FormContext);\n    if (\"disabled\" in props) {\n        rest.disabled = disabled;\n    }\n    return (React.createElement(\"label\", { className: classNames(\"weui-check__label\", { \"weui-cell_disabled\": disabled || content.disabled }), htmlFor: props.id },\n        React.createElement(ListItem, { className: classNames(className, \"checkbox-item\"), footer: footer, arrow: arrow, head: React.createElement(FormItemField, { prop: prop, valueKey: \"checked\", converValue: converValue, label: label, trigger: trigger, defaultValue: defaultValue, normalize: normalize, serialization: serialization, disabledValidate: disabledValidate, onValidate: onValidate },\n                React.createElement(Checkbox, __assign({}, rest))) }, children)));\n}\nexport default React.memo(CheckboxItem);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Checkbox, Form, CheckboxItem, ListGroup } from \"weui-react\";\nfunction CheckboxDemo(_a) {\n    var history = _a.history;\n    return (React.createElement(Form, { title: \"\\u590D\\u9009\\u6846\\u6837\\u5F0F\", opr: React.createElement(Button, { type: \"primary\", onClick: function () { return history.goBack(); } }, \"\\u8FD4\\u56DE\"), tips: React.createElement(Checkbox, { className: \"weui-agree\" },\n            React.createElement(\"span\", { className: \"weui-agree__text\" },\n                \"\\u9605\\u8BFB\\u5E76\\u540C\\u610F\",\n                React.createElement(\"a\", null, \"\\u300A\\u76F8\\u5173\\u6761\\u6B3E\\u300B\"))) },\n        React.createElement(ListGroup, null,\n            React.createElement(CheckboxItem, { prop: \"checkbox\", value: \"vvv\", id: \"s11\" }, \"\\u96F7\\u7535\\u63A5\\u53E3\"),\n            React.createElement(CheckboxItem, { prop: \"checkbox\", value: \"ggg\", id: \"s12\" }, \"type-c\\u63A5\\u53E3\"))));\n}\nexport default withRouter(CheckboxDemo);\n","import { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useControll } from \"utils-hooks\";\nimport Icon from \"../Icon\";\nimport \"./style/index.scss\";\nvar Checkbox = React.forwardRef(function (props, ref) {\n    var _a;\n    var _b = props.prefixCls, prefixCls = _b === void 0 ? \"weui-check\" : _b, className = props.className, style = props.style, defaultChecked = props.defaultChecked, children = props.children, _c = props.stand, stand = _c === void 0 ? false : _c, rest = __rest(props, [\"prefixCls\", \"className\", \"style\", \"defaultChecked\", \"children\", \"stand\"]);\n    var _d = useControll(props, \"checked\", \"defaultChecked\", false), checked = _d[0], setChecked = _d[1], isControll = _d[2];\n    var classString = classNames(prefixCls, (_a = {},\n        _a[prefixCls + \"-checked\"] = checked,\n        _a[prefixCls + \"-disabled\"] = props.disabled,\n        _a));\n    function changeChecked(check) {\n        if (props.disabled) {\n            return;\n        }\n        if (!isControll) {\n            // 非受控组件将当前checked作为唯一数据源\n            setChecked(check);\n        }\n        if (props.onChange) {\n            props.onChange(check, props.value);\n        }\n    }\n    function handleCheckChange(e) {\n        changeChecked(e.target.checked);\n    }\n    function toggle() {\n        if (!(\"checked\" in props) || stand) {\n            changeChecked(!checked);\n        }\n    }\n    return (React.createElement(\"span\", { className: classNames(\"checkbox-wrap\", className) },\n        React.createElement(\"input\", __assign({}, rest, { value: rest.value || \"\" }, (isControll ? { checked: checked } : { defaultChecked: checked }), { type: \"checkbox\", \"aria-disabled\": props.disabled, className: classString, onChange: handleCheckChange, ref: ref })),\n        React.createElement(Icon, { icon: \"checked\", onClick: toggle }),\n        children && React.cloneElement(children, { onClick: toggle })));\n});\nexport default React.memo(Checkbox);\n"],"sourceRoot":""}