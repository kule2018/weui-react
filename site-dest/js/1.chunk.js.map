{"version":3,"sources":["webpack:///./node_modules/utils-hooks/es/useControll.js","webpack:///./node_modules/utils-hooks/es/usePortal.js","webpack:///./node_modules/utils-hooks/es/useContainer.js","webpack:///./node_modules/utils-hooks/es/useTranstion.js","webpack:///./node_modules/utils-hooks/es/Lifecycles/useMount.js","webpack:///./node_modules/utils-hooks/es/Lifecycles/useUnmount.js","webpack:///./node_modules/utils-hooks/es/State/useGlobalState.js","webpack:///./node_modules/utils-hooks/es/State/index.js","webpack:///./node_modules/utils-hooks/es/SideEffects/useDebounce.js","webpack:///./node_modules/utils-hooks/es/index.js"],"names":["useControll","props","key","defaultKey","defaultValue","convent","isControll","_a","DefineDefaultValue","value","setValue","usePortal","className","getContainer","container","containerRef","current","document","body","removeChild","Function","createElement","classList","add","appendChild","useContainer","node","createPortal","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","useTranstion","visible","initTranstion","state","setState","firstFlag","firstVisible","ref","handleTransitionEnter","e","element","target","handleTransitionLeave","removeEventListener","addEventListener","useMount","mount","useUnmount","unmount","MonitorState","initState","_this","this","unsubscribe","callback","subscribes","index","findSubscribe","splice","previousState","forEach","fn","prototype","findIndex","subscribe","push","getState","Store","change","val","_value","_subscribes","Object","defineProperty","get","enumerable","configurable","Create","useDebounceCallback","ms","args","handle","setTimeout","bind","clearTimeout"],"mappings":"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","file":"js/1.chunk.js","sourcesContent":["import { useState } from \"react\";\n/**\n * 获取默认值\n * @param props React组件的props对象\n * @param key 值键\n * @param defaultKey    默认值键\n */\nexport function DefineDefaultValue(props, key, defaultKey, convent) {\n    if (key === void 0) { key = \"value\"; }\n    if (defaultKey === void 0) { defaultKey = \"defaultValue\"; }\n    var defaultValue = null;\n    if (key in props) {\n        defaultValue = convent ? convent(props[key]) : props[key];\n    }\n    else if (defaultKey in props) {\n        defaultValue = convent ? convent(props[defaultKey]) : props[defaultKey];\n    }\n    return defaultValue;\n}\n/**\n * 受控组件样板\n * @param props React组件的props对象\n * @param key 值键\n * @param defaultKey 默认值键\n */\nexport function useControll(props, key, defaultKey, defaultValue, convent) {\n    if (key === void 0) { key = \"value\"; }\n    if (defaultKey === void 0) { defaultKey = \"defaultValue\"; }\n    var isControll = key in props;\n    var _a = useState(DefineDefaultValue(props, key, defaultKey, convent) || defaultValue), value = _a[0], setValue = _a[1];\n    return [isControll ? props[key] : value, setValue, isControll];\n}\n//# sourceMappingURL=useControll.js.map","import ReactDOM from \"react-dom\";\nimport { useContainer } from \"./useContainer\";\n/**\n * 使用Portal, 弹出内容\n * @param getContainer\n * @param getContainer\n */\nexport function usePortal(className, getContainer) {\n    var container = useContainer(className, getContainer);\n    function renderPortal(node) {\n        if (!container) {\n            return null;\n        }\n        return ReactDOM.createPortal(node, container);\n    }\n    return [renderPortal, container];\n}\n//# sourceMappingURL=usePortal.js.map","import { useEffect, useRef } from \"react\";\n/**\n * 获取容器\n * @param getContainer\n * @param   className\n * @example const container = useContainer(() => some_container);\n */\nexport function useContainer(className, getContainer) {\n    var containerRef = useRef(null);\n    // 在组件装卸时, 清除再body内创建的 container\n    useEffect(function () {\n        return function () {\n            if (containerRef.current) {\n                document.body.removeChild(containerRef.current);\n            }\n        };\n    }, []);\n    var container;\n    if (!getContainer) {\n        // 未提供 container 则在Body下创建div作为容器\n        if (!containerRef.current) {\n            container = document.createElement(\"div\");\n            if (className) {\n                container.classList.add(className);\n            }\n            document.body.appendChild(container);\n            containerRef.current = container;\n        }\n        else {\n            return containerRef.current;\n        }\n    }\n    else if (getContainer instanceof Function) {\n        container = getContainer();\n    }\n    else {\n        container = getContainer;\n    }\n    return container;\n}\nexport function useContainerWithRef(containerRef, className, getContainer) {\n    // 在组件装卸时, 清除再body内创建的 container\n    useEffect(function () {\n        return function () {\n            if (containerRef.current) {\n                document.body.removeChild(containerRef.current);\n            }\n        };\n    }, []);\n    var container;\n    if (!getContainer) {\n        // 未提供 container 则在Body下创建div作为容器\n        if (!containerRef.current) {\n            container = document.createElement(\"div\");\n            if (className) {\n                container.classList.add(className);\n            }\n            document.body.appendChild(container);\n            containerRef.current = container;\n        }\n        else {\n            return containerRef.current;\n        }\n    }\n    else if (getContainer instanceof Function) {\n        container = getContainer();\n    }\n    else {\n        container = getContainer;\n    }\n    return container;\n}\n//# sourceMappingURL=useContainer.js.map","import { useCallback, useEffect, useRef, useState } from \"react\";\nexport var UNMOUNTED = \"unmounted\";\nexport var EXITED = \"exited\";\nexport var ENTERING = \"entering\";\nexport var ENTERED = \"entered\";\nexport var EXITING = \"exiting\";\n/**\n * 过度状态\n * @param visible   是否可见\n * @param initTranstion   是否初始动画, 默认false[可选]\n * @example const [ref, state] = useTranstion(visible);\n */\nexport function useTranstion(visible, initTranstion) {\n    if (initTranstion === void 0) { initTranstion = false; }\n    var _a = useState(UNMOUNTED), state = _a[0], setState = _a[1];\n    // visible ? ENTERED : EXITED\n    var firstFlag = useRef(true);\n    var firstVisible = useRef(visible);\n    var ref = useRef();\n    var handleTransitionEnter = useCallback(function (e) {\n        var element = ref.current;\n        if (e.target === element) {\n            setState(ENTERED);\n        }\n    }, []);\n    var handleTransitionLeave = useCallback(function (e) {\n        var element = ref.current;\n        if (e.target === element) {\n            setState(EXITED);\n        }\n    }, []);\n    useEffect(function () {\n        var element = ref.current;\n        if (!element) {\n            return;\n        }\n        // 默认忽略第一次visible状态为false时的过度, 避免显示关闭过度动画\n        if (firstFlag.current) {\n            firstFlag.current = false;\n            if (!initTranstion && !firstVisible.current) {\n                visible ? setState(ENTERED) : setState(EXITED);\n                return;\n            }\n        }\n        if (visible) {\n            // 重置离开的样式和事件\n            element.removeEventListener(\"transitionend\", handleTransitionLeave);\n            element.removeEventListener(\"animationend\", handleTransitionLeave);\n            // 1. 监听过度完毕事件\n            element.addEventListener(\"transitionend\", handleTransitionEnter);\n            element.addEventListener(\"animationend\", handleTransitionEnter);\n            setState(ENTERING);\n        }\n        else {\n            element.removeEventListener(\"transitionend\", handleTransitionEnter);\n            element.removeEventListener(\"animationend\", handleTransitionEnter);\n            element.addEventListener(\"transitionend\", handleTransitionLeave);\n            element.addEventListener(\"animationend\", handleTransitionLeave);\n            setState(EXITING);\n        }\n    }, [visible]);\n    return [ref, state];\n}\nexport function useTranstionWithRef(ref, visible, initTranstion) {\n    if (initTranstion === void 0) { initTranstion = false; }\n    var _a = useState(initTranstion ? UNMOUNTED : visible ? ENTERED : EXITED), state = _a[0], setState = _a[1];\n    var init = useRef(false);\n    var handleTransitionEnter = useCallback(function (e) {\n        var element = ref.current;\n        if (e.target === element) {\n            setState(ENTERED);\n        }\n    }, []);\n    var handleTransitionLeave = useCallback(function (e) {\n        var element = ref.current;\n        if (e.target === element) {\n            setState(EXITED);\n        }\n    }, []);\n    useEffect(function () {\n        var element = ref.current;\n        if (!element) {\n            return;\n        }\n        /**\n         * 第一次立即设置完毕状态, 而不等待过度动画完毕, 因为这个时候没有过度\n         */\n        if (init.current === false) {\n            if (initTranstion) {\n                visible ? setState(ENTERED) : setState(EXITED);\n            }\n            init.current = true;\n            return;\n        }\n        if (visible) {\n            // 重置离开的样式和事件\n            element.removeEventListener(\"transitionend\", handleTransitionLeave);\n            element.removeEventListener(\"animationend\", handleTransitionLeave);\n            // 1. 监听过度完毕事件\n            element.addEventListener(\"transitionend\", handleTransitionEnter);\n            element.addEventListener(\"animationend\", handleTransitionEnter);\n            setState(ENTERING);\n        }\n        else {\n            element.removeEventListener(\"transitionend\", handleTransitionEnter);\n            element.removeEventListener(\"animationend\", handleTransitionEnter);\n            element.addEventListener(\"transitionend\", handleTransitionLeave);\n            element.addEventListener(\"animationend\", handleTransitionLeave);\n            setState(EXITING);\n        }\n    }, [visible]);\n    return state;\n}\n//# sourceMappingURL=useTranstion.js.map","import { useEffect } from \"react\";\nexport var useMount = function (mount) { return useEffect(mount, []); };\n//# sourceMappingURL=useMount.js.map","import { useEffect } from \"react\";\nexport var useUnmount = function (unmount) {\n    useEffect(function () { return function () {\n        if (unmount)\n            unmount();\n    }; }, []);\n};\n//# sourceMappingURL=useUnmount.js.map","import { useState, useEffect } from \"react\";\nvar MonitorState = /** @class */ (function () {\n    function MonitorState(initState) {\n        var _this = this;\n        this.unsubscribe = function (callback) {\n            var subscribes = _this.subscribes;\n            var index = _this.findSubscribe(callback);\n            if (index !== -1) {\n                subscribes.splice(index, 1);\n            }\n        };\n        this.setState = function (value) {\n            _this.previousState = value;\n            _this.subscribes.forEach(function (fn) { return fn(value); });\n        };\n        this.previousState = initState;\n        this.subscribes = [];\n    }\n    MonitorState.prototype.findSubscribe = function (callback) {\n        return this.subscribes.findIndex(function (fn) { return fn === callback; });\n    };\n    MonitorState.prototype.subscribe = function (callback) {\n        var _this = this;\n        var subscribes = this.subscribes;\n        var index = this.findSubscribe(callback);\n        if (index === -1) {\n            subscribes.push(callback);\n        }\n        else {\n            subscribes[index] = callback;\n        }\n        // 返回取消订阅得函数\n        return function () { return _this.unsubscribe(callback); };\n    };\n    MonitorState.prototype.getState = function () {\n        return this.previousState;\n    };\n    return MonitorState;\n}());\nexport { MonitorState };\nexport function useGlobalState(state) {\n    var _a = useState(state.getState()), val = _a[0], setVal = _a[1];\n    useEffect(function () {\n        var unsubscribe = state.subscribe(function (value) {\n            setVal(value);\n        });\n        return unsubscribe;\n    }, [1]);\n    return [val, state.setState];\n}\n//# sourceMappingURL=useGlobalState.js.map","/**\n * 状态数据\n * @description 数据修改将触发订阅事件\n */\nvar Store = /** @class */ (function () {\n    /**\n     * 创建Store\n     * @param defaultValue\n     */\n    function Store(defaultValue) {\n        var _this = this;\n        /**\n         * 改变值\n         * @param val\n         */\n        this.change = function (val) {\n            _this._value = val;\n            _this._subscribes.forEach(function (fn) { return fn(val); });\n        };\n        /**\n         * 取消订阅\n         */\n        this.unsubscribe = function (callback) {\n            var subscribes = _this._subscribes;\n            var index = _this.findSubscribe(callback);\n            if (index !== -1) {\n                subscribes.splice(index, 1);\n            }\n        };\n        this._value = defaultValue || null;\n        this._subscribes = [];\n    }\n    /**\n     * 寻找订阅器\n     * @param callback\n     */\n    Store.prototype.findSubscribe = function (callback) {\n        return this._subscribes.findIndex(function (fn) { return fn === callback; });\n    };\n    /**\n     * 订阅\n     * @param callback\n     */\n    Store.prototype.subscribe = function (callback) {\n        var _this = this;\n        var subscribes = this._subscribes;\n        var index = this.findSubscribe(callback);\n        if (index === -1) {\n            subscribes.push(callback);\n        }\n        else {\n            subscribes[index] = callback;\n        }\n        // 返回取消订阅得函数\n        return function () { return _this.unsubscribe(callback); };\n    };\n    Object.defineProperty(Store.prototype, \"value\", {\n        /**\n         * 获取值\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 创建Store\n     */\n    Store.Create = function (defaultValue) {\n        return new Store(defaultValue);\n    };\n    return Store;\n}());\nexport { Store };\n//# sourceMappingURL=index.js.map","import { useEffect, useState } from \"react\";\n/**\n * 防抖函数\n * @param value 值\n * @param delay 延迟\n * @example const debouncedSearch = useDebounce(search, 500);\n */\nexport function useDebounce(value, delay) {\n    if (delay === void 0) { delay = 500; }\n    // State and setters for debounced value\n    var _a = useState(value), debouncedValue = _a[0], setDebouncedValue = _a[1];\n    useEffect(function () {\n        // Update debounced value after delay\n        var handler = setTimeout(function () {\n            setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return function () {\n            clearTimeout(handler);\n        };\n    }, [value, delay]); // Only re-call effect if value or delay changes\n    return debouncedValue;\n}\n/**\n * 防抖函数\n * @param   fn 回调函数\n * @param   ms  延迟\n * @param   args    依赖参数\n */\nexport function useDebounceCallback(fn, ms, args) {\n    if (ms === void 0) { ms = 0; }\n    if (args === void 0) { args = []; }\n    useEffect(function () {\n        if (!ms) {\n            fn();\n            return;\n        }\n        var handle = setTimeout(fn.bind(null, args), ms);\n        return function () {\n            // if args change then clear timeout\n            clearTimeout(handle);\n        };\n    }, args);\n}\n//# sourceMappingURL=useDebounce.js.map","export * from \"./useMedia\";\nexport * from \"./useControll\";\nexport * from \"./useContainer\";\nexport * from \"./usePortal\";\nexport * from \"./useTranstion\";\nexport * from \"./useObserver\";\nexport * from \"./Lifecycles/useMount\";\nexport * from \"./Lifecycles/useUnmount\";\nexport * from \"./Lifecycles/useUpdateEffect\";\nexport * from \"./Sensors/useObserverScroll\";\nexport * from \"./State/useGlobalState\";\nexport * from \"./State/index\";\nexport * from \"./State/useStore\";\nexport * from \"./useOutsideClick\";\nexport * from \"./Trigger/useTrigger\";\nexport * from \"./Trigger/useTriggerChain\";\nexport * from \"./SideEffects/useDebounce\";\nexport * from \"./SideEffects/useForceUpdate\";\nexport * from \"./SideEffects/useHover\";\nexport * from \"./useFetch\";\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}